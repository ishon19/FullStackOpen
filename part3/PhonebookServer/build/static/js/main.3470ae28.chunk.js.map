{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/serverService.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","eventHandler","value","onChange","PersonForm","contactNameHandler","contactNumberHandler","submitHandler","defaultName","defaultNumber","type","onClick","Persons","data","filterString","deleteClickHandler","trim","map","person","key","name","phone","id","displayAllContacts","filter","toLowerCase","includes","displayFilteredContacts","baseUrl","axios","get","then","response","contactObj","post","delete","put","Notification","message","messageType","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterString","setMessage","setMessageType","displayNotification","setTimeout","useEffect","console","log","contactService","catch","err","error","e","target","event","preventDefault","duplicate","length","concat","window","confirm","alert","updatedData","modifiedList","find","newContactList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3470ae28.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ eventHandler, value }) => (\n  <p>\n    Filter Contacts: <input onChange={eventHandler} value={value} />\n  </p>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  contactNameHandler,\n  contactNumberHandler,\n  submitHandler,\n  defaultName,\n  defaultNumber,\n}) => {\n  return (\n    <form>\n      <div>\n        name: <input onChange={contactNameHandler} value={defaultName} />\n        <div>\n          number:{\" \"}\n          <input onChange={contactNumberHandler} value={defaultNumber} />\n        </div>\n      </div>\n      <div>\n        <button type=\"submit\" onClick={submitHandler}>\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ data, filterString, deleteClickHandler }) => {\n  const displayAllContacts = (data) => {\n    return data.map((person) => (\n      <p key={person.name}>\n        {person.name} {person.phone}{\" \"}\n        <button onClick={() => deleteClickHandler(person.id)}>delete</button>\n      </p>\n    ));\n  };\n\n  const displayFilteredContacts = (data, filterString) => {\n    let filteredList = data.filter((person) =>\n      person.name.toLowerCase().includes(filterString.toLowerCase())\n    );\n    return filteredList.map((person) => (\n      <p key={person.name}>\n        {person.name} {person.phone}{\" \"}\n        <button onClick={() => deleteClickHandler(person.id)}>delete</button>\n      </p>\n    ));\n  };\n\n  return (\n    <div>\n      {filterString.trim() === \"\"\n        ? displayAllContacts(data)\n        : displayFilteredContacts(data, filterString)}\n    </div>\n  );\n};\n\nexport default Persons;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst addContact = (contactObj) => {\n  const request = axios.post(baseUrl, contactObj);\n  return request.then((response) => response.data);\n};\n\nconst deleteContact = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst updateContact = (id, contactObj) => {\n  const request = axios.put(`${baseUrl}/${id}`, contactObj);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, addContact, deleteContact, updateContact };\n","import React from \"react\";\n\nconst Notification = ({ message, messageType }) => {\n  if (message === null) return null;\n  return <div className={messageType}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./Filter\";\nimport PersonForm from \"./PersonForm\";\nimport Persons from \"./Persons\";\nimport contactService from \"../services/serverService\";\nimport Notification from \"./Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterString, setFilterString] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [messageType, setMessageType] = useState(null);\n\n  const displayNotification = (message, type) => {\n    setMessage(message);\n    setMessageType(type);\n    setTimeout(() => {\n      setMessage(null);\n      setMessageType(null);\n    }, 5000);\n  };\n\n  const addContact = (event) => {\n    event.preventDefault();\n    let contactObj = { name: newName, phone: newNumber };\n\n    //check if the name already exists\n    let duplicate = persons.filter((person) => person.name === contactObj.name);\n    if (duplicate.length === 0) {\n      contactService\n        .addContact(contactObj)\n        .then((data) => {\n          setPersons(persons.concat(data));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          displayNotification(`Added ${data.name}`, \"success\");\n        })\n        .catch((err) => {\n          console.log(err.response);\n          displayNotification(`Error: ${err.response.data.error}`, \"error\");\n        });\n    } else {\n      if (\n        window.confirm(\n          alert(\n            `${newName} already exists in the Phonebook, replace the old number with new one?`\n          )\n        )\n      ) {\n        contactService\n          .updateContact(duplicate[0].id, contactObj)\n          .then((updatedData) => {\n            let modifiedList = persons.map((person) =>\n              person.id === updatedData.id ? updatedData : person\n            );\n            setPersons(modifiedList);\n            setNewName(\"\");\n            setNewNumber(\"\");\n            displayNotification(`Updated ${updatedData.name}`, \"success\");\n          })\n          .catch((err) => {\n            console.log(err.response);\n            displayNotification(`Error: ${err.response.data.error}`, \"error\");\n          });\n      }\n    }\n  };\n\n  const handleContactName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleContactNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFiltering = (e) => {\n    setFilterString(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(\"effect\");\n    contactService\n      .getAll()\n      .then((data) => {\n        console.log(\"promise fulfilled\");\n        setPersons(data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        displayNotification(`Error: ${err.response.data.error}`, \"error\");\n      });\n  }, []);\n\n  const deleteClickHandler = (id) => {\n    let person = persons.find((person) => person.id === id);\n    if (window.confirm(`Do you want to delete ${person.name}`)) {\n      contactService\n        .deleteContact(id)\n        .then((data) => {\n          let newContactList = persons.filter((person) => person.id !== id);\n          setPersons(newContactList);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((err) => {\n          console.log(err.response);\n          displayNotification(`Error: ${err.response.data.error}`, \"error\");\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageType={messageType} />\n      <Filter eventHandler={handleFiltering} value={filterString} />\n      <h2>Add a new</h2>\n      <PersonForm\n        contactNameHandler={handleContactName}\n        contactNumberHandler={handleContactNumber}\n        submitHandler={addContact}\n        defaultName={newName}\n        defaultNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        data={persons}\n        filterString={filterString}\n        deleteClickHandler={deleteClickHandler}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}